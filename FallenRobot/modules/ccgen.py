import asyncio
import datetime

from telethon.tl import functions, types
from FallenRobot.events import register
from FallenRobot import ubot2, telethn


async def is_register_admin(chat, user):
    if isinstance(chat, (types.InputPeerChannel, types.InputChannel)):
        return isinstance(
            (
                await telethn(functions.channels.GetParticipantRequest(chat, user))
            ).participant,
            (types.ChannelParticipantAdmin, types.ChannelParticipantCreator),
        )
    if isinstance(chat, types.InputPeerUser):
        return True


@register(pattern="^/ccgen (.*)")
async def alive(event):
    if event.is_group and not await is_register_admin(
        event.input_chat, event.message.sender_id
    ):
        return
    sender = await event.get_sender()
    fname = sender.first_name
    m = await event.reply("Generating CC Please Wait...")
    ok = event.pattern_match.group(1)
    async with ubot2.conversation("@ccgen_robot") as bot_conv:
        await bot_conv.send_message("/generate")
        await bot_conv.send_message("💳Credit Card Generator💳")
        await asyncio.sleep(2)
        await bot_conv.send_message(ok)
        await asyncio.sleep(1)
        response = await bot_conv.get_response()
        await asyncio.sleep(1)
        await response.click(text="✅Generate✅")
        await asyncio.sleep(2)
        text = "****Generated Cards:****\n"
        gen = await bot_conv.get_response()
        card = gen.text
        text = f"{card.splitlines()[0]}\n"
        text += f"{card.splitlines()[1]}\n"
        text += f"{card.splitlines()[2]}\n"
        text += f"{card.splitlines()[3]}\n"
        text += f"{card.splitlines()[4]}\n"
        text += f"{card.splitlines()[5]}\n"
        text += f"\nGenerated By: [𝝙𝗡𝗢𝗡𝗬𝗠𝗢𝗨𝗦](tg://user?id=1356469075)"
        text += f"\nRequested By: **{fname}**"
        await m.edit(text)
